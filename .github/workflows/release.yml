name: release

on:
  push:
    tags:
    - '*'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux-arm,linux-x64,win-x86,win-x64,win-arm,osx-x64
        dotnetos: [linux, win, osx]
        dotnetarch: [x86, x64, arm, arm64]
        exclude:
          - dotnetos: linux
            dotnetarch: x86
          - dotnetos: osx
            dotnetarch: x86
          - dotnetos: osx
            dotnetarch: arm
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - name: environment prepare
        run: |
          curl -sSL https://dotnet.microsoft.com/download/dotnet/scripts/v1/dotnet-install.sh | bash /dev/stdin --channel STS
      - name: build
        env:
          DOTNETOS: ${{ matrix.dotnetos }}
          DOTNETARCH: ${{ matrix.dotnetarch }}
        run: |
          cd AirISP
          dotnet publish --configuration Release -r $DOTNETOS-$DOTNETARCH -p:PublishSingleFile=true -p:PublishTrimmed=true --self-contained true
          mkdir pkg
          mv bin/Release/net7.0/$DOTNETOS-$DOTNETARCH/publish/* pkg/

      - uses: actions/upload-artifact@v3
        with:
          name: AirISP-${{ matrix.dotnetos }}-${{ matrix.dotnetarch }}
          path: AirISP/pkg/

  publish:
    runs-on: ubuntu-latest
    needs: [build]
    permissions:
      contents: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-linux-arm
        path: AirISP-linux-arm/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-linux-arm64
        path: AirISP-linux-arm64/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-linux-x64
        path: AirISP-linux-x64/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-osx-x64
        path: AirISP-osx-x64/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-osx-arm64
        path: AirISP-osx-arm64/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-win-arm
        path: AirISP-win-arm/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-win-arm64
        path: AirISP-win-arm64/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-win-x64
        path: AirISP-win-x64/
    - uses: actions/download-artifact@v3
      with:
        name: AirISP-win-x86
        path: AirISP-win-x86/

    - name: Create Release Asset
      run: |
        cd AirISP-linux-arm
        chmod +x ./*
        cd ..
        tar -cvf AirISP-linux-arm.tar AirISP-linux-arm/
        cd AirISP-linux-arm64
        chmod +x ./*
        cd ..
        tar -cvf AirISP-linux-arm64.tar AirISP-linux-arm64/
        cd AirISP-linux-x64
        chmod +x ./*
        cd ..
        tar -cvf AirISP-linux-x64.tar AirISP-linux-x64/
        cd AirISP-osx-arm64
        chmod +x ./*
        cd ..
        tar -cvf AirISP-osx-arm64.tar AirISP-osx-arm64/
        cd AirISP-osx-x64
        chmod +x ./*
        cd ..
        tar -cvf AirISP-osx-x64.tar AirISP-osx-x64/
        zip -r AirISP-win-arm.zip AirISP-win-arm/
        zip -r AirISP-win-arm64.zip AirISP-win-arm64/
        zip -r AirISP-win-x64.zip AirISP-win-x64/
        zip -r AirISP-win-x86.zip AirISP-win-x86/

    - uses: ncipollo/release-action@v1
      with:
        allowUpdates: true
        artifacts: "AirISP-linux-arm.tar,AirISP-linux-arm64.tar,AirISP-linux-x64.tar,AirISP-osx-arm64.tar,AirISP-osx-x64.tar,AirISP-win-arm.zip,AirISP-win-arm64.zip,AirISP-win-x64.zip,AirISP-win-x86.zip"

    - name: Send repository_dispatch event to package json
      run: |
        curl -X POST https://api.github.com/repos/Air-duino/Arduino-pack-json-ci/dispatches \
        -H 'Accept: application/vnd.github.everest-preview+json' \
        -u ${{ secrets.USER_TOKEN }} \
        --data '{"event_type": "AirISP"}'
